{
  "swagger": "2.0",
  "info": {
    "description": "League of Legends champion statistics\n",
    "version": "0.0.1",
    "title": "League of Legends stats",
    "contact": {
      "name": "heigo.kure@khk.ee"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost",
  "basePath": "/v2",
  "schemes": [
    "http"
  ],
  "paths": {
    "/champion": {
      "post": {
        "tags": [
          "champion"
        ],
        "summary": "Add a new champion",
        "description": "",
        "operationId": "addChampion",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Champion that needs to be added to the list",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Champion"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "champion_auth": [
              "write_champions",
              "read_champions"
            ]
          }
        ]
      }
    },
    "/champions/findByRoles": {
      "get": {
        "tags": [
          "champion"
        ],
        "summary": "Finds Champions by roles",
        "description": "Multiple status values can be provided with comma seperated strings",
        "operationId": "findChampionsByRoles",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "Status values that need to be considered for filter",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Champion"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/champions/findByWinPercent": {
      "get": {
        "tags": [
          "Champion"
        ],
        "summary": "Finds Champions by Win%",
        "description": "Champion win percentages",
        "operationId": "findChampionsByWin%",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "WinPercent",
            "description": "Win% to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Champion"
              }
            }
          },
          "400": {
            "description": "Invalid Win% value"
          }
        }
      }
    },
    "/champions/{championId}": {
      "get": {
        "tags": [
          "champion"
        ],
        "summary": "Find Champion by ID",
        "description": "Returns a champion when ID < 10.  ID > 10 or nonintegers will simulate API error conditions",
        "operationId": "getChampionById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "championId",
            "description": "ID of champion that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Champion"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Champion not found"
          }
        }
      },
      "put": {
        "tags": [
          "champion"
        ],
        "summary": "Updates a champion in the store with form data",
        "description": "",
        "operationId": "updateChampionWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "championId",
            "description": "ID of champion that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "description": "Updated name of the champion",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "description": "Updated role of the champion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "champion_auth": [
              "write_champions",
              "read_champions"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "champion"
        ],
        "summary": "Deletes a champion",
        "description": "",
        "operationId": "deleteChampion",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "api_key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "championId",
            "description": "Champion id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid champion value"
          }
        },
        "security": [
          {
            "champion_auth": [
              "write_champions",
              "read_champions"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "champion_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://example.com",
      "flow": "implicit",
      "scopes": {
        "write_champions": "modify champions in your list",
        "read_champions": "read your champions"
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Champion": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "Ashe"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "role": {
          "type": "string",
          "description": "Champion role in the list"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}